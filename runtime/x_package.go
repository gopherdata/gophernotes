// this file was generated by gomacro command: import _i "github.com/gopherdata/gophernotes/runtime"
// DO NOT EDIT! Any change will be lost when the file is re-generated

package runtime

import (
	r "reflect"

	"github.com/cosmos72/gomacro/imports"
)

// reflection: allow interpreted code to import "github.com/gopherdata/gophernotes/runtime"
func init() {
	imports.Packages["github.com/gopherdata/gophernotes/runtime"] = imports.Package{
		Binds: map[string]r.Value{
			"HTML":               r.ValueOf(HTML),
			"JPEG":               r.ValueOf(JPEG),
			"JSON":               r.ValueOf(JSON),
			"JavaScript":         r.ValueOf(JavaScript),
			"Latex":              r.ValueOf(Latex),
			"MIMETypeHTML":       r.ValueOf(MIMETypeHTML),
			"MIMETypeJPEG":       r.ValueOf(MIMETypeJPEG),
			"MIMETypeJSON":       r.ValueOf(MIMETypeJSON),
			"MIMETypeJavaScript": r.ValueOf(MIMETypeJavaScript),
			"MIMETypeLatex":      r.ValueOf(MIMETypeLatex),
			"MIMETypeMarkdown":   r.ValueOf(MIMETypeMarkdown),
			"MIMETypePNG":        r.ValueOf(MIMETypePNG),
			"MIMETypeSVG":        r.ValueOf(MIMETypeSVG),
			"Markdown":           r.ValueOf(Markdown),
			"Math":               r.ValueOf(Math),
			"PNG":                r.ValueOf(PNG),
			"Render":             r.ValueOf(Render),
			"SVG":                r.ValueOf(SVG),
			"Text":               r.ValueOf(Text),
		}, Types: map[string]r.Type{
			"DisplayData":          r.TypeOf((*DisplayData)(nil)).Elem(),
			"HTMLRenderable":       r.TypeOf((*HTMLRenderable)(nil)).Elem(),
			"JPEGRenderable":       r.TypeOf((*JPEGRenderable)(nil)).Elem(),
			"JSONRenderable":       r.TypeOf((*JSONRenderable)(nil)).Elem(),
			"JavaScriptRenderable": r.TypeOf((*JavaScriptRenderable)(nil)).Elem(),
			"LatexRenderable":      r.TypeOf((*LatexRenderable)(nil)).Elem(),
			"MIMEBundleRenderable": r.TypeOf((*MIMEBundleRenderable)(nil)).Elem(),
			"MarkdownRenderable":   r.TypeOf((*MarkdownRenderable)(nil)).Elem(),
			"PNGRenderable":        r.TypeOf((*PNGRenderable)(nil)).Elem(),
			"SVGRenderable":        r.TypeOf((*SVGRenderable)(nil)).Elem(),
		}, Proxies: map[string]r.Type{
			"HTMLRenderable":       r.TypeOf((*P_github_com_gopherdata_gophernotes_runtime_HTMLRenderable)(nil)).Elem(),
			"JPEGRenderable":       r.TypeOf((*P_github_com_gopherdata_gophernotes_runtime_JPEGRenderable)(nil)).Elem(),
			"JSONRenderable":       r.TypeOf((*P_github_com_gopherdata_gophernotes_runtime_JSONRenderable)(nil)).Elem(),
			"JavaScriptRenderable": r.TypeOf((*P_github_com_gopherdata_gophernotes_runtime_JavaScriptRenderable)(nil)).Elem(),
			"LatexRenderable":      r.TypeOf((*P_github_com_gopherdata_gophernotes_runtime_LatexRenderable)(nil)).Elem(),
			"MIMEBundleRenderable": r.TypeOf((*P_github_com_gopherdata_gophernotes_runtime_MIMEBundleRenderable)(nil)).Elem(),
			"MarkdownRenderable":   r.TypeOf((*P_github_com_gopherdata_gophernotes_runtime_MarkdownRenderable)(nil)).Elem(),
			"PNGRenderable":        r.TypeOf((*P_github_com_gopherdata_gophernotes_runtime_PNGRenderable)(nil)).Elem(),
			"SVGRenderable":        r.TypeOf((*P_github_com_gopherdata_gophernotes_runtime_SVGRenderable)(nil)).Elem(),
		}, Untypeds: map[string]string{
			"MIMETypeHTML":       "string:text/html",
			"MIMETypeJPEG":       "string:image/jpeg",
			"MIMETypeJSON":       "string:application/json",
			"MIMETypeJavaScript": "string:application/javascript",
			"MIMETypeLatex":      "string:text/latex",
			"MIMETypeMarkdown":   "string:text/markdown",
			"MIMETypePNG":        "string:image/png",
			"MIMETypeSVG":        "string:image/svg+xml",
		},
	}
}

// --------------- proxy for github.com/gopherdata/gophernotes/runtime.HTMLRenderable ---------------
type P_github_com_gopherdata_gophernotes_runtime_HTMLRenderable struct {
	Object        interface{}
	RenderAsHTML_ func(interface{}) string
}

func (P *P_github_com_gopherdata_gophernotes_runtime_HTMLRenderable) RenderAsHTML() string {
	return P.RenderAsHTML_(P.Object)
}

// --------------- proxy for github.com/gopherdata/gophernotes/runtime.JPEGRenderable ---------------
type P_github_com_gopherdata_gophernotes_runtime_JPEGRenderable struct {
	Object        interface{}
	RenderAsJPEG_ func(interface{}) []byte
}

func (P *P_github_com_gopherdata_gophernotes_runtime_JPEGRenderable) RenderAsJPEG() []byte {
	return P.RenderAsJPEG_(P.Object)
}

// --------------- proxy for github.com/gopherdata/gophernotes/runtime.JSONRenderable ---------------
type P_github_com_gopherdata_gophernotes_runtime_JSONRenderable struct {
	Object        interface{}
	RenderAsJSON_ func(interface{}) map[string]interface{}
}

func (P *P_github_com_gopherdata_gophernotes_runtime_JSONRenderable) RenderAsJSON() map[string]interface{} {
	return P.RenderAsJSON_(P.Object)
}

// --------------- proxy for github.com/gopherdata/gophernotes/runtime.JavaScriptRenderable ---------------
type P_github_com_gopherdata_gophernotes_runtime_JavaScriptRenderable struct {
	Object              interface{}
	RenderAsJavaScript_ func(interface{}) string
}

func (P *P_github_com_gopherdata_gophernotes_runtime_JavaScriptRenderable) RenderAsJavaScript() string {
	return P.RenderAsJavaScript_(P.Object)
}

// --------------- proxy for github.com/gopherdata/gophernotes/runtime.LatexRenderable ---------------
type P_github_com_gopherdata_gophernotes_runtime_LatexRenderable struct {
	Object         interface{}
	RenderAsLatex_ func(interface{}) string
}

func (P *P_github_com_gopherdata_gophernotes_runtime_LatexRenderable) RenderAsLatex() string {
	return P.RenderAsLatex_(P.Object)
}

// --------------- proxy for github.com/gopherdata/gophernotes/runtime.MIMEBundleRenderable ---------------
type P_github_com_gopherdata_gophernotes_runtime_MIMEBundleRenderable struct {
	Object              interface{}
	RenderAsMIMEBundle_ func(interface{}) (data map[string]interface{}, metadata map[string]interface{})
}

func (P *P_github_com_gopherdata_gophernotes_runtime_MIMEBundleRenderable) RenderAsMIMEBundle() (data map[string]interface{}, metadata map[string]interface{}) {
	return P.RenderAsMIMEBundle_(P.Object)
}

// --------------- proxy for github.com/gopherdata/gophernotes/runtime.MarkdownRenderable ---------------
type P_github_com_gopherdata_gophernotes_runtime_MarkdownRenderable struct {
	Object            interface{}
	RenderAsMarkdown_ func(interface{}) string
}

func (P *P_github_com_gopherdata_gophernotes_runtime_MarkdownRenderable) RenderAsMarkdown() string {
	return P.RenderAsMarkdown_(P.Object)
}

// --------------- proxy for github.com/gopherdata/gophernotes/runtime.PNGRenderable ---------------
type P_github_com_gopherdata_gophernotes_runtime_PNGRenderable struct {
	Object       interface{}
	RenderAsPNG_ func(interface{}) []byte
}

func (P *P_github_com_gopherdata_gophernotes_runtime_PNGRenderable) RenderAsPNG() []byte {
	return P.RenderAsPNG_(P.Object)
}

// --------------- proxy for github.com/gopherdata/gophernotes/runtime.SVGRenderable ---------------
type P_github_com_gopherdata_gophernotes_runtime_SVGRenderable struct {
	Object       interface{}
	RenderAsSVG_ func(interface{}) string
}

func (P *P_github_com_gopherdata_gophernotes_runtime_SVGRenderable) RenderAsSVG() string {
	return P.RenderAsSVG_(P.Object)
}
