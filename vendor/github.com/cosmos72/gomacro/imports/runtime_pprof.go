// this file was generated by gomacro command: import _b "runtime/pprof"
// DO NOT EDIT! Any change will be lost when the file is re-generated

package imports

import (
	. "reflect"
	"runtime/pprof"
)

// reflection: allow interpreted code to import "runtime/pprof"
func init() {
	Packages["runtime/pprof"] = Package{
	Binds: map[string]Value{
		"Do":	ValueOf(pprof.Do),
		"ForLabels":	ValueOf(pprof.ForLabels),
		"Label":	ValueOf(pprof.Label),
		"Labels":	ValueOf(pprof.Labels),
		"Lookup":	ValueOf(pprof.Lookup),
		"NewProfile":	ValueOf(pprof.NewProfile),
		"Profiles":	ValueOf(pprof.Profiles),
		"SetGoroutineLabels":	ValueOf(pprof.SetGoroutineLabels),
		"StartCPUProfile":	ValueOf(pprof.StartCPUProfile),
		"StopCPUProfile":	ValueOf(pprof.StopCPUProfile),
		"WithLabels":	ValueOf(pprof.WithLabels),
		"WriteHeapProfile":	ValueOf(pprof.WriteHeapProfile),
	}, Types: map[string]Type{
		"LabelSet":	TypeOf((*pprof.LabelSet)(nil)).Elem(),
		"Profile":	TypeOf((*pprof.Profile)(nil)).Elem(),
	}, 
	}
}
