// this file was generated by gomacro command: import _b "text/scanner"
// DO NOT EDIT! Any change will be lost when the file is re-generated

package imports

import (
	. "reflect"
	"text/scanner"
)

// reflection: allow interpreted code to import "text/scanner"
func init() {
	Packages["text/scanner"] = Package{
	Binds: map[string]Value{
		"Char":	ValueOf(scanner.Char),
		"Comment":	ValueOf(scanner.Comment),
		"EOF":	ValueOf(scanner.EOF),
		"Float":	ValueOf(scanner.Float),
		"GoTokens":	ValueOf(scanner.GoTokens),
		"GoWhitespace":	ValueOf(int64(scanner.GoWhitespace)),
		"Ident":	ValueOf(scanner.Ident),
		"Int":	ValueOf(scanner.Int),
		"RawString":	ValueOf(scanner.RawString),
		"ScanChars":	ValueOf(scanner.ScanChars),
		"ScanComments":	ValueOf(scanner.ScanComments),
		"ScanFloats":	ValueOf(scanner.ScanFloats),
		"ScanIdents":	ValueOf(scanner.ScanIdents),
		"ScanInts":	ValueOf(scanner.ScanInts),
		"ScanRawStrings":	ValueOf(scanner.ScanRawStrings),
		"ScanStrings":	ValueOf(scanner.ScanStrings),
		"SkipComments":	ValueOf(scanner.SkipComments),
		"String":	ValueOf(scanner.String),
		"TokenString":	ValueOf(scanner.TokenString),
	}, Types: map[string]Type{
		"Position":	TypeOf((*scanner.Position)(nil)).Elem(),
		"Scanner":	TypeOf((*scanner.Scanner)(nil)).Elem(),
	}, Untypeds: map[string]string{
		"Char":	"int:-5",
		"Comment":	"int:-8",
		"EOF":	"int:-1",
		"Float":	"int:-4",
		"GoTokens":	"int:1012",
		"GoWhitespace":	"int:4294977024",
		"Ident":	"int:-2",
		"Int":	"int:-3",
		"RawString":	"int:-7",
		"ScanChars":	"int:32",
		"ScanComments":	"int:256",
		"ScanFloats":	"int:16",
		"ScanIdents":	"int:4",
		"ScanInts":	"int:8",
		"ScanRawStrings":	"int:128",
		"ScanStrings":	"int:64",
		"SkipComments":	"int:512",
		"String":	"int:-6",
	}, Wrappers: map[string][]string{
		"Scanner":	[]string{"IsValid","String",},
	}, 
	}
}
